@* Travel/PaymentPage *@

@model Tuple<RazorOrder, int>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<!-- Button to trigger SweetAlert confirmation -->
<button id="swal-button" hidden></button>

<script>
    // Function to show SweetAlert confirmation
    function showSweetAlert() {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, continue",
            cancelButtonText: "Cancel"
        }).then((result) => {
            if (result.isConfirmed) {
                // If the user clicks "Yes, continue", show the PaymentPage view
                window.onload = function () {
                    document.getElementById('rzp-button1').click();
                };
                document.getElementById('rzp-button1').onclick = function (e) {
                    rzp1.open();
                    e.preventDefault();
                };
            } else {
                // If the user clicks "Cancel", redirect to the previous page
                window.location.href = '/ControllerName/ActionName';
            }
        });
    }

    // Call the SweetAlert confirmation function when the page loads
    window.onload = function () {
        showSweetAlert();
    };
</script>

<!-- Button to trigger SweetAlert confirmation -->
<button id="swal-button" hidden></button>

<!-- Button to trigger payment -->
<button id="rzp-button1" hidden>Pay</button>

<!-- Razorpay checkout script -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
    var options = {
        "key": "@Html.DisplayFor(model => model.Item1.razorpayKey)",
        "amount": "@Html.DisplayFor(model => model.Item1.amount)",
        "currency": "@Html.DisplayFor(model => model.Item1.currency)",
        "name": "@Html.DisplayFor(model => model.Item1.name)",
        "description": "@Html.DisplayFor(model => model.Item1.description)",
        "image": "https://placehold.co/100x100",
        "order_id": "@Html.DisplayFor(model => model.Item1.orderId)",
        "handler": function (response) {
            var paymentStatus = response ? 'paid' : 'pending';

            if (response.error || response.razorpay_payment_id === null) {
                paymentStatus = 'pending';
            } else {
                paymentStatus = 'paid';
                document.getElementById('rzp_paymentid').value = response.razorpay_payment_id;
            }

            document.getElementById('rzp-paymentstatus').value = paymentStatus;
            document.getElementById('rzp-paymentresponse').click();
            document.getElementById('rzp_orderid').value = response.razorpay_order_id;


            var orderId = @Json.Serialize(Model.Item2);
            var paymentId = response.razorpay_payment_id;

            window.location.href = '/Customer/Home/OrderConfirmation?Id=' + orderId + '&paymentStatus=' + paymentStatus + '&paymentId=' + paymentId;
        },
        "prefill": {
            "name": "@Html.DisplayFor(model => model.Item1.name)",
            "email": "@Html.DisplayFor(model => model.Item1.email)",
            "contact": "@Html.DisplayFor(model => model.Item1.contactNumber)"
        },
        "notes": {
            "address": "@Html.DisplayFor(model => model.Item1.address)"
        },
        "theme": {
            "color": "#F37254"
        },
        "modal": {
            ondismiss: function () {
                var orderId = @Json.Serialize(Model.Item2);
                var paymentStatus = 'pending';
                var paymentId = null;

                window.location.href = '/Customer/Home/OrderConfirmation?Id=' + orderId + '&paymentStatus=' + paymentStatus + '&paymentId=' + paymentId;
            }
        }
    };
    var rzp1 = new Razorpay(options);

    window.onload = function () {
        document.getElementById('rzp-button1').click();
    };

    document.getElementById('rzp-button1').onclick = function (e) {
        rzp1.open();
        e.preventDefault();
    };
</script>


<!-- Hidden form to submit payment response -->
@using (Html.BeginForm("Complete", "Payment"))
{
    @Html.AntiForgeryToken()

    @Html.Hidden("rzp_paymentid")
    @Html.Hidden("rzp_orderid")
    @Html.Hidden("paymentStatus", null, new { id = "rzp-paymentstatus" }) <!-- Add a hidden field for payment status -->
    <button type="submit" id="rzp-paymentresponse" hidden>Submit</button>
}

<style>
    .rzp-container {
        filter: blur(4px);
        pointer-events: none;
    }
</style>