@model TravelVM

<div style="text-align: center;">
    <h2>Flight Details</h2>
    <div style="display: flex; justify-content: center; margin-bottom: 20px;">
        <h6>@Model.SelectedFlight.CarrierName |</h6>
        <h6 style="margin-left: 10px;">@Model.SelectedFlight.AircraftName</h6>
    </div>
</div>

<form asp-controller="Travel" asp-action="FlightPayment" method="post">
    <div style="margin-top:-90px;margin-left:1000px">
        <button type="submit" class="btnCheckout">Buy Ticket</button>
        <p style="margin-left:10px">@Model.SelectedFlight.Price.Currency @Model.SelectedFlight.Price.Total</p>
    </div>
@*     <div style="margin-top: -20px;margin-left:1000px;">
        <p style="width:5px;">@Model.SelectedFlight.Price.Currency @Model.SelectedFlight.Price.Total</p>
    </div> *@

@if (Model.SelectedFlight.Itineraries.Count == 1) //One Way Trip
{
    <div style="text-align: left;">
        <h3>Flight to @Model.SelectedFlight.Itineraries[0].Segments.Last().Arrival.IataCode</h3>
        <p>@Model.SelectedFlight.Itineraries[0].Segments.Count() stops · @Model.SelectedFlight.Itineraries[0].Duration.Replace("PT", "").Replace("H", "h ").Replace("M", "m")</p>

        @foreach (var segment in Model.SelectedFlight.Itineraries[0].Segments)
        {
            <div style="margin-bottom: 20px;">
                <div style="display: flex; align-items: center;">
                    <div style="width: 10px; height: 10px; border: 2px solid black; border-radius: 50%; margin-right: 10px;"></div>
                    <p style="margin: 0;"> @segment.Departure.At.ToString("ddd d MMM") · @segment.Departure.At.ToString("HH:mm")</p>
                </div>
                <div style="display: flex; align-items: center; margin-left: 4px;">
                    <div style="width: 1px; height: 30px; background-color: black; margin-right: 15px;"></div>
                    <p style="margin: 0;"><strong>@segment.Departure.IataCode · Terminal: @(string.IsNullOrWhiteSpace(segment.Departure.Terminal) ? "1" : segment.Departure.Terminal)</strong></p>
                </div>
                <div style="display: flex; align-items: center;">
                    <div style="width: 10px; height: 10px; border: 2px solid black; border-radius: 50%; margin-right: 10px;"></div>
                    <p style="margin: 0;">@segment.Arrival.At.ToString("ddd d MMM") · @segment.Arrival.At.ToString("HH:mm")</p>
                </div>
                <div style="display: flex; align-items: center; margin-left: 4px;">
                    <div style="width: 1px; height: 30px; background-color: black; margin-right: 15px;"></div>
                    <p style="margin: 0;"><strong>@segment.Arrival.IataCode · Terminal: @(string.IsNullOrWhiteSpace(segment.Arrival.Terminal) ? "1" : segment.Arrival.Terminal)</strong></p>

                </div>

                <div style="margin-top: -110px; margin-left: 300px;">
                    <div style="display: flex; align-items: center;">
                        <p style="margin: 0;">@segment.CarrierCode</p>
                        <span style="margin: 0 10px;">|</span>
                        <p style="margin: 0;">@segment.CarrierCode</p>
                    </div>
                    <p style="margin: 0;">@segment.Number · Economy</p>
                    <p style="margin: 0;">Flight time : @segment.Duration.Replace("PT", "").Replace("H", "h ").Replace("M", "m")</p>
                </div>


                <div style="margin-top:50px; margin-left: 4px;">
                @if (segment != Model.SelectedFlight.Itineraries[0].Segments.Last())
                {
                    <div style="width: 1px; height: 30px; border-right: 2px dotted black; margin-right: 15px;"></div>
                    var nextSegment = Model.SelectedFlight.Itineraries[0].Segments.ElementAt(Model.SelectedFlight.Itineraries[0].Segments.IndexOf(segment) + 1);
                    var layoverDuration = nextSegment.Departure.At - segment.Arrival.At;
                        <p style="margin-top:-30px;margin-left: 15px;">Layover : @layoverDuration.Hours hours @layoverDuration.Minutes minutes</p>
                }
                </div>
            </div>
        }
    </div>
}
else if (Model.SelectedFlight.Itineraries.Count == 2) // Round Trip
{
    // Outbound Flight
    <div style="text-align: left;">
        <h3>Flight to @Model.SelectedFlight.Itineraries[0].Segments.Last().Arrival.IataCode</h3>
        <p>@Model.SelectedFlight.Itineraries[0].Segments.Count() stops · @Model.SelectedFlight.Itineraries[0].Duration.Replace("PT", "").Replace("H", "h ").Replace("M", "m")</p>

        @foreach (var segment in Model.SelectedFlight.Itineraries[0].Segments)
        {
            <div style="margin-bottom: 20px;">
                <div style="display: flex; align-items: center;">
                    <div style="width: 10px; height: 10px; border: 2px solid black; border-radius: 50%; margin-right: 10px;"></div>
                    <p style="margin: 0;">@segment.Departure.At.ToString("ddd d MMM") · @segment.Departure.At.ToString("HH:mm")</p>
                </div>
                <div style="display: flex; align-items: center; margin-left: 4px;">
                    <div style="width: 1px; height: 30px; background-color: black; margin-right: 15px;"></div>
                    <p style="margin: 0;"><strong>@segment.Departure.IataCode · Terminal: @(string.IsNullOrWhiteSpace(segment.Departure.Terminal) ? "1" : segment.Departure.Terminal)</strong></p>
                </div>
                <div style="display: flex; align-items: center;">
                    <div style="width: 10px; height: 10px; border: 2px solid black; border-radius: 50%; margin-right: 10px;"></div>
                    <p style="margin: 0;">@segment.Arrival.At.ToString("ddd d MMM") · @segment.Arrival.At.ToString("HH:mm")</p>
                </div>
                <div style="display: flex; align-items: center; margin-left: 4px;">
                    <div style="width: 1px; height: 30px; background-color: black; margin-right: 15px;"></div>
                    <p style="margin: 0;"><strong>@segment.Arrival.IataCode · Terminal: @(string.IsNullOrWhiteSpace(segment.Arrival.Terminal) ? "1" : segment.Arrival.Terminal)</strong></p>
                </div>

                <div style="margin-top: -110px; margin-left: 300px;">
                    <div style="display: flex; align-items: center;">
                        <p style="margin: 0;">@segment.CarrierCode</p>
                        <span style="margin: 0 10px;">|</span>
                        <p style="margin: 0;">@segment.CarrierCode</p>
                    </div>
                    <p style="margin: 0;">@segment.Number · Economy</p>
                    <p style="margin: 0;">Flight time : @segment.Duration.Replace("PT", "").Replace("H", "h ").Replace("M", "m")</p>
                </div>

                <div style="margin-top:50px; margin-left: 4px;">
                    @if (segment != Model.SelectedFlight.Itineraries[0].Segments.Last())
                    {
                        <div style="width: 1px; height: 30px; border-right: 2px dotted black; margin-right: 15px;"></div>
                        var nextSegment = Model.SelectedFlight.Itineraries[0].Segments.ElementAt(Model.SelectedFlight.Itineraries[0].Segments.IndexOf(segment) + 1);
                        var layoverDuration = nextSegment.Departure.At - segment.Arrival.At;
                        <p style="margin-top:-30px;margin-left: 15px;">Layover : @layoverDuration.Hours hours @layoverDuration.Minutes minutes</p>
                    }
                </div>
            </div>
        }
    </div>

    // Return Flight
    <div style="text-align: left; margin-top: 50px;">
        <h3>Flight to @Model.SelectedFlight.Itineraries[1].Segments.Last().Arrival.IataCode</h3>
        <p>@Model.SelectedFlight.Itineraries[1].Segments.Count() stops · @Model.SelectedFlight.Itineraries[1].Duration.Replace("PT", "").Replace("H", "h ").Replace("M", "m")</p>

        @foreach (var segment in Model.SelectedFlight.Itineraries[1].Segments)
        {
            <div style="margin-bottom: 20px;">
                <div style="display: flex; align-items: center;">
                    <div style="width: 10px; height: 10px; border: 2px solid black; border-radius: 50%; margin-right: 10px;"></div>
                    <p style="margin: 0;">@segment.Departure.At.ToString("ddd d MMM") · @segment.Departure.At.ToString("HH:mm")</p>
                </div>
                <div style="display: flex; align-items: center; margin-left: 4px;">
                    <div style="width: 1px; height: 30px; background-color: black; margin-right: 15px;"></div>
                    <p style="margin: 0;"><strong>@segment.Departure.IataCode · Terminal: @(string.IsNullOrWhiteSpace(segment.Departure.Terminal) ? "1" : segment.Departure.Terminal)</strong></p>
                </div>
                <div style="display: flex; align-items: center;">
                    <div style="width: 10px; height: 10px; border: 2px solid black; border-radius: 50%; margin-right: 10px;"></div>
                    <p style="margin: 0;">@segment.Arrival.At.ToString("ddd d MMM") · @segment.Arrival.At.ToString("HH:mm")</p>
                </div>
                <div style="display: flex; align-items: center; margin-left: 4px;">
                    <div style="width: 1px; height: 30px; background-color: black; margin-right: 15px;"></div>
                    <p style="margin: 0;"><strong>@segment.Arrival.IataCode · Terminal: @(string.IsNullOrWhiteSpace(segment.Arrival.Terminal) ? "1" : segment.Arrival.Terminal)</strong></p>
                </div>

                <div style="margin-top: -110px; margin-left: 300px;">
                    <div style="display: flex; align-items: center;">
                        <p style="margin: 0;">@segment.CarrierCode</p>
                        <span style="margin: 0 10px;">|</span>
                        <p style="margin: 0;">@segment.CarrierCode</p>
                    </div>
                    <p style="margin: 0;">@segment.Number · Economy</p>
                    <p style="margin: 0;">Flight time : @segment.Duration.Replace("PT", "").Replace("H", "h ").Replace("M", "m")</p>
                </div>

                <div style="margin-top:50px; margin-left: 4px;">
                    @if (segment != Model.SelectedFlight.Itineraries[1].Segments.Last())
                    {
                        <div style="width: 1px; height: 30px; border-right: 2px dotted black; margin-right: 15px;"></div>
                        var nextSegment = Model.SelectedFlight.Itineraries[1].Segments.ElementAt(Model.SelectedFlight.Itineraries[1].Segments.IndexOf(segment) + 1);
                        var layoverDuration = nextSegment.Departure.At - segment.Arrival.At;
                        <p style="margin-top:-30px;margin-left: 15px;">Layover : @layoverDuration.Hours hours @layoverDuration.Minutes minutes</p>
                    }
                </div>
            </div>
        }
    </div>
}
</form>

<style>
    .btnCheckout {
        border: 2px solid blue;
        color: white;
        background-color: blue;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s;
        border-radius: 8px;
    }

        .btnCheckout:hover {
            background-color: darkblue;
        }
</style>